#include "Inventory.h"
#include "Item.h"
#include"define.h"


//---------------------------------------------------------------------------------------
//コンストラクタ
//---------------------------------------------------------------------------------------
CInventory::CInventory()
{
}

//---------------------------------------------------------------------------------------
//デストラクタ
//---------------------------------------------------------------------------------------
CInventory::~CInventory()
{
}

//---------------------------------------------------------------------------------------
//ストレージにアイテムをセット
//---------------------------------------------------------------------------------------
bool CInventory::SetItem(CItem Item)
{
	for (int i = 0; i < ITEM_NUM_MAX; i++)
	{
		//ストレージが空白の部分を探す
		if (m_Item[i].GetID() == 0)
		{
			//アイテムデータをコピー
			m_Item[i] = Item;


			//効能の設定がされていなければ、自動的に設定する
			if (Item.GetValue() == 0)
			{
				//効能を設定
				m_Item[i].SetValue(rand() % 10 + 5);
			}
			return true;
		}
	}
	return false;
}


//---------------------------------------------------------------------------------------
//指定されたアイテムを消去
//---------------------------------------------------------------------------------------
void CInventory::DelInventory(int Receipt)
{
	//中身を初期化し、消去
	//IDの初期化
	m_Item[Receipt].SetID(0);
	//名前の初期化
	m_Item[Receipt].SetName(_T("0"));
	//タイプの初期化
	m_Item[Receipt].SetValue(0);
	//効果値の初期化
	m_Item[Receipt].SetType(-99);

}
//---------------------------------------------------------------------------------------
//指定されたアイテムの効果ジャンルを返却する
//---------------------------------------------------------------------------------------
int CInventory::GetEffect(int Receipt)
{
	return m_Item[Receipt].GetType();
}
//---------------------------------------------------------------------------------------
//指定されたアイテムの効能?を返却する
//---------------------------------------------------------------------------------------
int CInventory::GetEffectValue(int Receipt)
{
	//アイテムのIDによって効果を変更する
	switch (m_Item[Receipt].GetID())
	{
		//林檎
	case ITEM_APPLE:
		//特に効果なし
		return EFFECT_NON;
		break;
		//薬草
	case ITEM_HERB:
		//体力の回復
		return m_Item[Receipt].GetValue();
		break;
		//剣
	case ITEM_SWORD:
		//攻撃力アップ
		return m_Item[Receipt].GetValue();
		break;
		//盾
	case ITEM_SHIELD:
		//防御力アップ
		return m_Item[Receipt].GetValue();
		break;

		//バグ検査用
	default:
		//効果なし
		return EFFECT_NON;
		break;
	}
}