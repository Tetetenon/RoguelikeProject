#include "Fade.h"
#include "TextureManager.h"

CFade* CFade::m_pFade = NULL;
//---------------------------------------------------------------------------------------
//コンストラクタ
//---------------------------------------------------------------------------------------
CFade::CFade(void)
{
	//描画フラグ初期化
	m_nFadeState = FADEMODE_NON;

	//描画時間初期化
	m_nFadeTime = 0;

	//テクスチャの設定
	m_nTextureID = TEXTURE_WALL;
}

//---------------------------------------------------------------------------------------
//デストラクタ
//---------------------------------------------------------------------------------------
CFade::~CFade(void)
{
}
//---------------------------------------------------------------------------------------
//実体の作成
//---------------------------------------------------------------------------------------
void CFade::Create(void)
{
	//中身がなければ作成
	if (!m_pFade)
	{
		m_pFade = new CFade;
	}
}
//---------------------------------------------------------------------------------------
//実体の削除
//---------------------------------------------------------------------------------------
void CFade::Delete(void)
{
	//中身があれば削除
	if (m_pFade)
	{
		delete m_pFade;
		m_pFade = NULL;
	}
}
//---------------------------------------------------------------------------------------
//実体のポインタを渡す
//---------------------------------------------------------------------------------------
CFade* CFade::GetPointer(void)
{
	//念のため作成関数を呼ぶ
	Create();
	return m_pFade;
}

//---------------------------------------------------------------------------------------
//更新
//---------------------------------------------------------------------------------------
void CFade::Update()
{
	//もし、フェードの状態が何もしない場合、処理を終了する
	if(m_nFadeState == FADEMODE_NON)
		return;

	//フェードの値
	int nAlphaNum = 0;
	//現在のフェード状態に応じて処理を変更
	switch(m_nFadeState)
	{
		//フェードインモード
	case FADEMODE_IN:
		//もし、描画残り時間が起こっている場合、その数を減らす
		if(m_nFadeTime <= 255)
		{
			m_nFadeTime += (FADETIME / 80);
		}
		nAlphaNum = 255 - m_nFadeTime;
			break;
		//フェードアウトモード
	case FADEMODE_OUT:
		//もし、描画残り時間が残っていれば、その時間を減らす
		if(m_nFadeTime <= 255)
		{
			m_nFadeTime += (FADETIME / 60);
		}
		nAlphaNum = m_nFadeTime;
		break;
	}
	//頂点カラーの設定
	m_aVertex[0].col = D3DCOLOR_RGBA(255,255,255,nAlphaNum);
	m_aVertex[1].col = D3DCOLOR_RGBA(255,255,255,nAlphaNum);
	m_aVertex[2].col = D3DCOLOR_RGBA(255,255,255,nAlphaNum);
	m_aVertex[3].col = D3DCOLOR_RGBA(255,255,255,nAlphaNum);
}
//---------------------------------------------------------------------------------------
//描画
//---------------------------------------------------------------------------------------
void CFade::Draw(void)
{
	//もし、フェードの状態が何もしない場合、処理を終了する
	if(m_nFadeState == FADEMODE_NON)
		return;
	//親の描画を行う
	C2DTexture::Draw();
}

//---------------------------------------------------------------------------------------
//フラグを立てる
//---------------------------------------------------------------------------------------
void CFade::ChangeState(int ChangeState)
{
	//フェードをするようにフラグを立てる
	m_nFadeState = ChangeState;
	//フェードまでの時間を設定する
	m_nFadeTime = 0;

}