#include "Turn.h"

//静的メンバの実体定義
int CTurn::m_State;								//ターンの状態を格納
int CTurn::m_BattleState;						//戦闘ステートの状況を保存
int CTurn::m_nSelectState_Num[GAME_STATE_MAX];	//ステートごとのユニットの選択数
int CTurn::m_StateTime;							//1ステートの時間

//---------------------------------------------------------------------------------------
//コンストラクタ
//---------------------------------------------------------------------------------------
CTurn::CTurn(void)
{
	//メンバの初期化
	m_State = GAME_STATE_STAND_BY_PLAYER;
	
	//ターンごとのユニット選択数を初期化
	for(int i = 0;i < GAME_STATE_MAX;i++)
	{
		m_nSelectState_Num[i] = 0;
	}
}


//---------------------------------------------------------------------------------------
//デストラクタ
//---------------------------------------------------------------------------------------
CTurn::~CTurn(void)
{
}

//---------------------------------------------------------------------------------------
//初期化
//---------------------------------------------------------------------------------------
void CTurn::Init ()
{
	//メンバの初期化
	m_State = GAME_STATE_STAND_BY_PLAYER;			//プレイヤーの入力待ち
	m_BattleState = BATTLE_STATE_GO;				//攻撃方向への突撃
}

//---------------------------------------------------------------------------------------
//終了
//---------------------------------------------------------------------------------------
void CTurn::Fin  ()
{

}

//---------------------------------------------------------------------------------------
//ステートを進める
//---------------------------------------------------------------------------------------
void CTurn::State_Advance()
{
	//ステートを次に進める
	m_State ++;

	//一巡したらステートを待機状態に戻す
	m_State %= GAME_STATE_MAX;
}

//---------------------------------------------------------------------------------------
//戦闘ステートを進める
//---------------------------------------------------------------------------------------
void CTurn::BattleState_Advance()
{
	//ステートを次に進める
	m_BattleState ++;

	//一巡したらステートを待機状態に戻す
	m_BattleState %= BATTLE_STATE_MAX;
}